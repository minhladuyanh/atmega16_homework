
Atmega_timer0.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000024a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000e  00800060  0000024a  000002de  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  0080006e  0080006e  000002ec  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002ec  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000031c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  00000358  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000084f  00000000  00000000  00000390  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000067a  00000000  00000000  00000bdf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000033b  00000000  00000000  00001259  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000068  00000000  00000000  00001594  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003c1  00000000  00000000  000015fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000203  00000000  00000000  000019bd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  00001bc0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__vector_9>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea e4       	ldi	r30, 0x4A	; 74
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ae 36       	cpi	r26, 0x6E	; 110
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	ae e6       	ldi	r26, 0x6E	; 110
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 37       	cpi	r26, 0x70	; 112
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 8b 00 	call	0x116	; 0x116 <main>
  8a:	0c 94 23 01 	jmp	0x246	; 0x246 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <_Z8hienthi1i>:
unsigned int dem = 0;
unsigned int countMin = 1;
unsigned int countHour = 1;
void hienthi1(int x){
	int ch,dv;
	ch = x/10;
  92:	6a e0       	ldi	r22, 0x0A	; 10
  94:	70 e0       	ldi	r23, 0x00	; 0
  96:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <__divmodhi4>
	dv = x%10;
	PORTB = 0x00;
  9a:	18 ba       	out	0x18, r1	; 24
	PORTB = 0x01;
  9c:	21 e0       	ldi	r18, 0x01	; 1
  9e:	28 bb       	out	0x18, r18	; 24
	PORTA = led[ch];
  a0:	fb 01       	movw	r30, r22
  a2:	ec 59       	subi	r30, 0x9C	; 156
  a4:	ff 4f       	sbci	r31, 0xFF	; 255
  a6:	20 81       	ld	r18, Z
  a8:	2b bb       	out	0x1b, r18	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  aa:	e7 ec       	ldi	r30, 0xC7	; 199
  ac:	f0 e0       	ldi	r31, 0x00	; 0
  ae:	31 97       	sbiw	r30, 0x01	; 1
  b0:	f1 f7       	brne	.-4      	; 0xae <_Z8hienthi1i+0x1c>
  b2:	00 c0       	rjmp	.+0      	; 0xb4 <_Z8hienthi1i+0x22>
  b4:	00 00       	nop
	_delay_ms(0.1);
	PORTB = 0x00;
  b6:	18 ba       	out	0x18, r1	; 24
	PORTB = (1<<PINB1);
  b8:	22 e0       	ldi	r18, 0x02	; 2
  ba:	28 bb       	out	0x18, r18	; 24
	PORTA = led[dv];
  bc:	fc 01       	movw	r30, r24
  be:	ec 59       	subi	r30, 0x9C	; 156
  c0:	ff 4f       	sbci	r31, 0xFF	; 255
  c2:	80 81       	ld	r24, Z
  c4:	8b bb       	out	0x1b, r24	; 27
  c6:	87 ec       	ldi	r24, 0xC7	; 199
  c8:	90 e0       	ldi	r25, 0x00	; 0
  ca:	01 97       	sbiw	r24, 0x01	; 1
  cc:	f1 f7       	brne	.-4      	; 0xca <_Z8hienthi1i+0x38>
  ce:	00 c0       	rjmp	.+0      	; 0xd0 <_Z8hienthi1i+0x3e>
  d0:	00 00       	nop
  d2:	08 95       	ret

000000d4 <_Z8hienthi2i>:
	_delay_ms(0.1);
}
void hienthi2(int x){
	int ch,dv;
	ch = x/10;
  d4:	6a e0       	ldi	r22, 0x0A	; 10
  d6:	70 e0       	ldi	r23, 0x00	; 0
  d8:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <__divmodhi4>
	dv = x%10;
	PORTB = 0x00;
  dc:	18 ba       	out	0x18, r1	; 24
	PORTB = 0x04;
  de:	24 e0       	ldi	r18, 0x04	; 4
  e0:	28 bb       	out	0x18, r18	; 24
	PORTC = led[ch];
  e2:	fb 01       	movw	r30, r22
  e4:	ec 59       	subi	r30, 0x9C	; 156
  e6:	ff 4f       	sbci	r31, 0xFF	; 255
  e8:	20 81       	ld	r18, Z
  ea:	25 bb       	out	0x15, r18	; 21
  ec:	e7 ec       	ldi	r30, 0xC7	; 199
  ee:	f0 e0       	ldi	r31, 0x00	; 0
  f0:	31 97       	sbiw	r30, 0x01	; 1
  f2:	f1 f7       	brne	.-4      	; 0xf0 <_Z8hienthi2i+0x1c>
  f4:	00 c0       	rjmp	.+0      	; 0xf6 <_Z8hienthi2i+0x22>
  f6:	00 00       	nop
	_delay_ms(0.1);
	PORTB = 0x00;
  f8:	18 ba       	out	0x18, r1	; 24
	PORTB = 0x08;
  fa:	28 e0       	ldi	r18, 0x08	; 8
  fc:	28 bb       	out	0x18, r18	; 24
	PORTC = led[dv];
  fe:	fc 01       	movw	r30, r24
 100:	ec 59       	subi	r30, 0x9C	; 156
 102:	ff 4f       	sbci	r31, 0xFF	; 255
 104:	80 81       	ld	r24, Z
 106:	85 bb       	out	0x15, r24	; 21
 108:	87 ec       	ldi	r24, 0xC7	; 199
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	01 97       	sbiw	r24, 0x01	; 1
 10e:	f1 f7       	brne	.-4      	; 0x10c <_Z8hienthi2i+0x38>
 110:	00 c0       	rjmp	.+0      	; 0x112 <_Z8hienthi2i+0x3e>
 112:	00 00       	nop
 114:	08 95       	ret

00000116 <main>:
	_delay_ms(0.1);
}
int main(void)
{
	DDRA = 0xFF;
 116:	8f ef       	ldi	r24, 0xFF	; 255
 118:	8a bb       	out	0x1a, r24	; 26
	PORTA = 0x00;
 11a:	1b ba       	out	0x1b, r1	; 27
	DDRB = 0x0F;
 11c:	9f e0       	ldi	r25, 0x0F	; 15
 11e:	97 bb       	out	0x17, r25	; 23
	PORTB = 0x00;
 120:	18 ba       	out	0x18, r1	; 24
	DDRC = 0xFF;
 122:	84 bb       	out	0x14, r24	; 20
	PORTC = 0x00;
 124:	15 ba       	out	0x15, r1	; 21
	TCCR0 = (1<<CS00)|(1<<CS01);
 126:	83 e0       	ldi	r24, 0x03	; 3
 128:	83 bf       	out	0x33, r24	; 51
	TCNT0 = 130; 
 12a:	82 e8       	ldi	r24, 0x82	; 130
 12c:	82 bf       	out	0x32, r24	; 50
	TIMSK = (1<<TOIE0);
 12e:	81 e0       	ldi	r24, 0x01	; 1
 130:	89 bf       	out	0x39, r24	; 57
	sei();
 132:	78 94       	sei
    while (1) 
    {
		hienthi1(countMin);
 134:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <countMin>
 138:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <countMin+0x1>
 13c:	0e 94 49 00 	call	0x92	; 0x92 <_Z8hienthi1i>
		hienthi2(countHour);
 140:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 144:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 148:	0e 94 6a 00 	call	0xd4	; 0xd4 <_Z8hienthi2i>
		if(dem == 60000){
 14c:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <__data_end>
 150:	90 91 6f 00 	lds	r25, 0x006F	; 0x80006f <__data_end+0x1>
 154:	80 36       	cpi	r24, 0x60	; 96
 156:	9a 4e       	sbci	r25, 0xEA	; 234
 158:	71 f5       	brne	.+92     	; 0x1b6 <main+0xa0>
			countMin++;
 15a:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <countMin>
 15e:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <countMin+0x1>
 162:	01 96       	adiw	r24, 0x01	; 1
 164:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <countMin+0x1>
 168:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <countMin>
			if(countMin>60) {
 16c:	cd 97       	sbiw	r24, 0x3d	; 61
 16e:	98 f0       	brcs	.+38     	; 0x196 <main+0x80>
				countMin = 0;
 170:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <countMin+0x1>
 174:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <countMin>
				countHour++;
 178:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 17c:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 180:	01 96       	adiw	r24, 0x01	; 1
 182:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 186:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
				if(countHour>24) countHour = 0;
 18a:	49 97       	sbiw	r24, 0x19	; 25
 18c:	20 f0       	brcs	.+8      	; 0x196 <main+0x80>
 18e:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 192:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
			}
			hienthi1(countMin);
 196:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <countMin>
 19a:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <countMin+0x1>
 19e:	0e 94 49 00 	call	0x92	; 0x92 <_Z8hienthi1i>
			hienthi2(countHour);
 1a2:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 1a6:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 1aa:	0e 94 6a 00 	call	0xd4	; 0xd4 <_Z8hienthi2i>
			dem = 0;
 1ae:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__data_end+0x1>
 1b2:	10 92 6e 00 	sts	0x006E, r1	; 0x80006e <__data_end>
 1b6:	87 ec       	ldi	r24, 0xC7	; 199
 1b8:	90 e0       	ldi	r25, 0x00	; 0
 1ba:	01 97       	sbiw	r24, 0x01	; 1
 1bc:	f1 f7       	brne	.-4      	; 0x1ba <main+0xa4>
 1be:	00 c0       	rjmp	.+0      	; 0x1c0 <main+0xaa>
 1c0:	00 00       	nop
 1c2:	b8 cf       	rjmp	.-144    	; 0x134 <main+0x1e>

000001c4 <__vector_9>:
		}
		_delay_ms(0.1);
    }
}
ISR(TIMER0_OVF_vect){
 1c4:	1f 92       	push	r1
 1c6:	0f 92       	push	r0
 1c8:	0f b6       	in	r0, 0x3f	; 63
 1ca:	0f 92       	push	r0
 1cc:	11 24       	eor	r1, r1
 1ce:	8f 93       	push	r24
 1d0:	9f 93       	push	r25
	TCNT0 = 130;
 1d2:	82 e8       	ldi	r24, 0x82	; 130
 1d4:	82 bf       	out	0x32, r24	; 50
	dem++;
 1d6:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <__data_end>
 1da:	90 91 6f 00 	lds	r25, 0x006F	; 0x80006f <__data_end+0x1>
 1de:	01 96       	adiw	r24, 0x01	; 1
 1e0:	90 93 6f 00 	sts	0x006F, r25	; 0x80006f <__data_end+0x1>
 1e4:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__data_end>
}
 1e8:	9f 91       	pop	r25
 1ea:	8f 91       	pop	r24
 1ec:	0f 90       	pop	r0
 1ee:	0f be       	out	0x3f, r0	; 63
 1f0:	0f 90       	pop	r0
 1f2:	1f 90       	pop	r1
 1f4:	18 95       	reti

000001f6 <__divmodhi4>:
 1f6:	97 fb       	bst	r25, 7
 1f8:	07 2e       	mov	r0, r23
 1fa:	16 f4       	brtc	.+4      	; 0x200 <__EEPROM_REGION_LENGTH__>
 1fc:	00 94       	com	r0
 1fe:	07 d0       	rcall	.+14     	; 0x20e <__divmodhi4_neg1>
 200:	77 fd       	sbrc	r23, 7
 202:	09 d0       	rcall	.+18     	; 0x216 <__divmodhi4_neg2>
 204:	0e 94 0f 01 	call	0x21e	; 0x21e <__udivmodhi4>
 208:	07 fc       	sbrc	r0, 7
 20a:	05 d0       	rcall	.+10     	; 0x216 <__divmodhi4_neg2>
 20c:	3e f4       	brtc	.+14     	; 0x21c <__divmodhi4_exit>

0000020e <__divmodhi4_neg1>:
 20e:	90 95       	com	r25
 210:	81 95       	neg	r24
 212:	9f 4f       	sbci	r25, 0xFF	; 255
 214:	08 95       	ret

00000216 <__divmodhi4_neg2>:
 216:	70 95       	com	r23
 218:	61 95       	neg	r22
 21a:	7f 4f       	sbci	r23, 0xFF	; 255

0000021c <__divmodhi4_exit>:
 21c:	08 95       	ret

0000021e <__udivmodhi4>:
 21e:	aa 1b       	sub	r26, r26
 220:	bb 1b       	sub	r27, r27
 222:	51 e1       	ldi	r21, 0x11	; 17
 224:	07 c0       	rjmp	.+14     	; 0x234 <__udivmodhi4_ep>

00000226 <__udivmodhi4_loop>:
 226:	aa 1f       	adc	r26, r26
 228:	bb 1f       	adc	r27, r27
 22a:	a6 17       	cp	r26, r22
 22c:	b7 07       	cpc	r27, r23
 22e:	10 f0       	brcs	.+4      	; 0x234 <__udivmodhi4_ep>
 230:	a6 1b       	sub	r26, r22
 232:	b7 0b       	sbc	r27, r23

00000234 <__udivmodhi4_ep>:
 234:	88 1f       	adc	r24, r24
 236:	99 1f       	adc	r25, r25
 238:	5a 95       	dec	r21
 23a:	a9 f7       	brne	.-22     	; 0x226 <__udivmodhi4_loop>
 23c:	80 95       	com	r24
 23e:	90 95       	com	r25
 240:	bc 01       	movw	r22, r24
 242:	cd 01       	movw	r24, r26
 244:	08 95       	ret

00000246 <_exit>:
 246:	f8 94       	cli

00000248 <__stop_program>:
 248:	ff cf       	rjmp	.-2      	; 0x248 <__stop_program>
