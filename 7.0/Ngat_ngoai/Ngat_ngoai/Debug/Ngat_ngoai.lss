
Ngat_ngoai.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000224  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  00000224  000002b8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  0080006a  0080006a  000002c2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002c2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002f4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  00000330  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000008ec  00000000  00000000  00000358  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000066c  00000000  00000000  00000c44  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000311  00000000  00000000  000012b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000034  00000000  00000000  000015c4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000385  00000000  00000000  000015f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002be  00000000  00000000  0000197d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  00001c3b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 e2       	ldi	r30, 0x24	; 36
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	aa e6       	ldi	r26, 0x6A	; 106
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ac 36       	cpi	r26, 0x6C	; 108
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 80 00 	call	0x100	; 0x100 <main>
  8a:	0c 94 10 01 	jmp	0x220	; 0x220 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <_Z7hienthij>:
#include <avr/interrupt.h>
#include <avr/io.h>
#include <util/delay.h>
unsigned char led[10] = {0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0x80,0x90};
int i=0;
void hienthi(unsigned int x){
  92:	ac 01       	movw	r20, r24
	int ch,dv;
	ch = x/10;
  94:	9c 01       	movw	r18, r24
  96:	ad ec       	ldi	r26, 0xCD	; 205
  98:	bc ec       	ldi	r27, 0xCC	; 204
  9a:	0e 94 01 01 	call	0x202	; 0x202 <__umulhisi3>
  9e:	fc 01       	movw	r30, r24
  a0:	f6 95       	lsr	r31
  a2:	e7 95       	ror	r30
  a4:	f6 95       	lsr	r31
  a6:	e7 95       	ror	r30
  a8:	f6 95       	lsr	r31
  aa:	e7 95       	ror	r30
	dv = x%10;
  ac:	9f 01       	movw	r18, r30
  ae:	22 0f       	add	r18, r18
  b0:	33 1f       	adc	r19, r19
  b2:	cf 01       	movw	r24, r30
  b4:	88 0f       	add	r24, r24
  b6:	99 1f       	adc	r25, r25
  b8:	88 0f       	add	r24, r24
  ba:	99 1f       	adc	r25, r25
  bc:	88 0f       	add	r24, r24
  be:	99 1f       	adc	r25, r25
  c0:	82 0f       	add	r24, r18
  c2:	93 1f       	adc	r25, r19
  c4:	48 1b       	sub	r20, r24
  c6:	59 0b       	sbc	r21, r25
	PORTD = 0x00;
  c8:	12 ba       	out	0x12, r1	; 18
	PORTD = 0b00000001;
  ca:	81 e0       	ldi	r24, 0x01	; 1
  cc:	82 bb       	out	0x12, r24	; 18
	PORTC = led[ch];
  ce:	e0 5a       	subi	r30, 0xA0	; 160
  d0:	ff 4f       	sbci	r31, 0xFF	; 255
  d2:	80 81       	ld	r24, Z
  d4:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  d6:	8f e9       	ldi	r24, 0x9F	; 159
  d8:	9f e0       	ldi	r25, 0x0F	; 15
  da:	01 97       	sbiw	r24, 0x01	; 1
  dc:	f1 f7       	brne	.-4      	; 0xda <_Z7hienthij+0x48>
  de:	00 c0       	rjmp	.+0      	; 0xe0 <_Z7hienthij+0x4e>
  e0:	00 00       	nop
	_delay_ms(1);
	PORTD = 0x00;
  e2:	12 ba       	out	0x12, r1	; 18
	PORTD = 0b00000010;
  e4:	82 e0       	ldi	r24, 0x02	; 2
  e6:	82 bb       	out	0x12, r24	; 18
	PORTC = led[dv];
  e8:	fa 01       	movw	r30, r20
  ea:	e0 5a       	subi	r30, 0xA0	; 160
  ec:	ff 4f       	sbci	r31, 0xFF	; 255
  ee:	80 81       	ld	r24, Z
  f0:	85 bb       	out	0x15, r24	; 21
  f2:	8f e9       	ldi	r24, 0x9F	; 159
  f4:	9f e0       	ldi	r25, 0x0F	; 15
  f6:	01 97       	sbiw	r24, 0x01	; 1
  f8:	f1 f7       	brne	.-4      	; 0xf6 <_Z7hienthij+0x64>
  fa:	00 c0       	rjmp	.+0      	; 0xfc <_Z7hienthij+0x6a>
  fc:	00 00       	nop
  fe:	08 95       	ret

00000100 <main>:
	_delay_ms(1);
}
int main(void)
{
	DDRA = (0<<PINA0)|(0<<PINA1);
 100:	1a ba       	out	0x1a, r1	; 26
	DDRC = 0xFF;
 102:	8f ef       	ldi	r24, 0xFF	; 255
 104:	84 bb       	out	0x14, r24	; 20
	PORTC = 0xFF;
 106:	85 bb       	out	0x15, r24	; 21
	DDRD = (1<<PIND0)|(1<<PIND1);
 108:	83 e0       	ldi	r24, 0x03	; 3
 10a:	81 bb       	out	0x11, r24	; 17
	PORTD = 0x00;
 10c:	12 ba       	out	0x12, r1	; 18

    while (1) 
    {
		hienthi(i);
 10e:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__data_end>
 112:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <__data_end+0x1>
 116:	0e 94 49 00 	call	0x92	; 0x92 <_Z7hienthij>
 11a:	8f e9       	ldi	r24, 0x9F	; 159
 11c:	9f e0       	ldi	r25, 0x0F	; 15
 11e:	01 97       	sbiw	r24, 0x01	; 1
 120:	f1 f7       	brne	.-4      	; 0x11e <main+0x1e>
 122:	00 c0       	rjmp	.+0      	; 0x124 <main+0x24>
 124:	00 00       	nop
		_delay_ms(1);
		if((PINA & (1<<PINA0))==0){
 126:	c8 99       	sbic	0x19, 0	; 25
 128:	35 c0       	rjmp	.+106    	; 0x194 <main+0x94>
			while((PINA & (1<<PINA0))==0){
 12a:	c8 99       	sbic	0x19, 0	; 25
 12c:	0d c0       	rjmp	.+26     	; 0x148 <main+0x48>
				hienthi(i);
 12e:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__data_end>
 132:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <__data_end+0x1>
 136:	0e 94 49 00 	call	0x92	; 0x92 <_Z7hienthij>
 13a:	8f e9       	ldi	r24, 0x9F	; 159
 13c:	9f e0       	ldi	r25, 0x0F	; 15
 13e:	01 97       	sbiw	r24, 0x01	; 1
 140:	f1 f7       	brne	.-4      	; 0x13e <main+0x3e>
 142:	00 c0       	rjmp	.+0      	; 0x144 <main+0x44>
 144:	00 00       	nop
 146:	f1 cf       	rjmp	.-30     	; 0x12a <main+0x2a>
				_delay_ms(1);
			}
			i++;
 148:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__data_end>
 14c:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <__data_end+0x1>
 150:	01 96       	adiw	r24, 0x01	; 1
 152:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <__data_end+0x1>
 156:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__data_end>
			if(i>99){
 15a:	84 36       	cpi	r24, 0x64	; 100
 15c:	91 05       	cpc	r25, r1
 15e:	74 f0       	brlt	.+28     	; 0x17c <main+0x7c>
				i=0;
 160:	10 92 6b 00 	sts	0x006B, r1	; 0x80006b <__data_end+0x1>
 164:	10 92 6a 00 	sts	0x006A, r1	; 0x80006a <__data_end>
				hienthi(i);
 168:	80 e0       	ldi	r24, 0x00	; 0
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	0e 94 49 00 	call	0x92	; 0x92 <_Z7hienthij>
 170:	8f e9       	ldi	r24, 0x9F	; 159
 172:	9f e0       	ldi	r25, 0x0F	; 15
 174:	01 97       	sbiw	r24, 0x01	; 1
 176:	f1 f7       	brne	.-4      	; 0x174 <main+0x74>
 178:	00 c0       	rjmp	.+0      	; 0x17a <main+0x7a>
 17a:	00 00       	nop
				_delay_ms(1);
			}
			hienthi(i);
 17c:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__data_end>
 180:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <__data_end+0x1>
 184:	0e 94 49 00 	call	0x92	; 0x92 <_Z7hienthij>
 188:	8f e9       	ldi	r24, 0x9F	; 159
 18a:	9f e0       	ldi	r25, 0x0F	; 15
 18c:	01 97       	sbiw	r24, 0x01	; 1
 18e:	f1 f7       	brne	.-4      	; 0x18c <main+0x8c>
 190:	00 c0       	rjmp	.+0      	; 0x192 <main+0x92>
 192:	00 00       	nop
			_delay_ms(1);
		}
		if((PINA & (1<<PINA1))==0){
 194:	c9 99       	sbic	0x19, 1	; 25
 196:	bb cf       	rjmp	.-138    	; 0x10e <main+0xe>
			while((PINA & (1<<PINA1))==0){
 198:	c9 99       	sbic	0x19, 1	; 25
 19a:	0d c0       	rjmp	.+26     	; 0x1b6 <main+0xb6>
				hienthi(i);
 19c:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__data_end>
 1a0:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <__data_end+0x1>
 1a4:	0e 94 49 00 	call	0x92	; 0x92 <_Z7hienthij>
 1a8:	8f e9       	ldi	r24, 0x9F	; 159
 1aa:	9f e0       	ldi	r25, 0x0F	; 15
 1ac:	01 97       	sbiw	r24, 0x01	; 1
 1ae:	f1 f7       	brne	.-4      	; 0x1ac <main+0xac>
 1b0:	00 c0       	rjmp	.+0      	; 0x1b2 <main+0xb2>
 1b2:	00 00       	nop
 1b4:	f1 cf       	rjmp	.-30     	; 0x198 <main+0x98>
				_delay_ms(1);
			}
			i--;
 1b6:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__data_end>
 1ba:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <__data_end+0x1>
 1be:	01 97       	sbiw	r24, 0x01	; 1
 1c0:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <__data_end+0x1>
 1c4:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__data_end>
			if(i<0){
 1c8:	99 23       	and	r25, r25
 1ca:	74 f4       	brge	.+28     	; 0x1e8 <main+0xe8>
				i=99;
 1cc:	83 e6       	ldi	r24, 0x63	; 99
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <__data_end+0x1>
 1d4:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__data_end>
				hienthi(i);
 1d8:	0e 94 49 00 	call	0x92	; 0x92 <_Z7hienthij>
 1dc:	8f e9       	ldi	r24, 0x9F	; 159
 1de:	9f e0       	ldi	r25, 0x0F	; 15
 1e0:	01 97       	sbiw	r24, 0x01	; 1
 1e2:	f1 f7       	brne	.-4      	; 0x1e0 <main+0xe0>
 1e4:	00 c0       	rjmp	.+0      	; 0x1e6 <main+0xe6>
 1e6:	00 00       	nop
				_delay_ms(1);
			}
			hienthi(i);
 1e8:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__data_end>
 1ec:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <__data_end+0x1>
 1f0:	0e 94 49 00 	call	0x92	; 0x92 <_Z7hienthij>
 1f4:	8f e9       	ldi	r24, 0x9F	; 159
 1f6:	9f e0       	ldi	r25, 0x0F	; 15
 1f8:	01 97       	sbiw	r24, 0x01	; 1
 1fa:	f1 f7       	brne	.-4      	; 0x1f8 <main+0xf8>
 1fc:	00 c0       	rjmp	.+0      	; 0x1fe <main+0xfe>
 1fe:	00 00       	nop
 200:	86 cf       	rjmp	.-244    	; 0x10e <main+0xe>

00000202 <__umulhisi3>:
 202:	a2 9f       	mul	r26, r18
 204:	b0 01       	movw	r22, r0
 206:	b3 9f       	mul	r27, r19
 208:	c0 01       	movw	r24, r0
 20a:	a3 9f       	mul	r26, r19
 20c:	70 0d       	add	r23, r0
 20e:	81 1d       	adc	r24, r1
 210:	11 24       	eor	r1, r1
 212:	91 1d       	adc	r25, r1
 214:	b2 9f       	mul	r27, r18
 216:	70 0d       	add	r23, r0
 218:	81 1d       	adc	r24, r1
 21a:	11 24       	eor	r1, r1
 21c:	91 1d       	adc	r25, r1
 21e:	08 95       	ret

00000220 <_exit>:
 220:	f8 94       	cli

00000222 <__stop_program>:
 222:	ff cf       	rjmp	.-2      	; 0x222 <__stop_program>
